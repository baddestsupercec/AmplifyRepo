# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Note @model @auth(rules: [ { allow: public } ] ){
  id: ID!
  name: String!
  description: String
  image: String
  username: String
  pH: Float
  temperature: Float
  humidity: Float
  smell: Float
  moisture: Float
  light: Float
}
type HealthParameters @model @auth(rules: [ { allow: public } ] ) {
  id: ID!
  name: String!
  username: String
  pHlow: Float
  pHhigh: Float
  temperatureLow: Float
  temperatureHigh: Float
  humidityLow: Float
  humidityHigh: Float
  smellLow: Float
  smellHigh: Float
  moistureLow: Float
  moistureHigh: Float
  lightLow: Float
  lightHigh: Float
}

type UserData @model @auth(rules: [ { allow: public } ] ){
  userID: ID! @primaryKey
  email: String
  username: String
  firstName: String
  lastName: String
  plant: [PlantData] @hasMany(indexName: "byPlant", fields: ["userID"])
}

type PlantData @model @auth(rules: [ { allow: public } ] ){
  plantID: ID! @primaryKey
  info: String
  healthparamatersid: ID!
  healthparameters: HealthParameters @hasOne(fields: ["healthparamatersid"])
  userid: ID! @index(name: "byPlant")
  sensor: [SensorData] @hasMany(indexName: "bySensor", fields: ["plantID"])
}

type SensorData @model @searchable @auth(rules: [ { allow: public } ] ){
  sensorID: ID! @primaryKey(sortKeyFields: ["dateTime"])
  dateTime: String!
  plantid: ID! @index(name: "bySensor")
  data: Float
}

type Subscription {
  onSensorByPlantId(plantDataSensorDatasId: ID!): SensorData
    @aws_subscribe(mutations: ["createSensorData"])
}
